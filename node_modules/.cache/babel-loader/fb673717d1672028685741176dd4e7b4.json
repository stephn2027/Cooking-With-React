{"ast":null,"code":"var _jsxFileName = \"/Users/kor/rmetest/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport firebase from '../Base';\nimport NoRecipesSelected from \"./NoRecipesSelected\";\nimport RecipeList from \"./RecipeList\";\nimport RecipeEdit from \"./RecipeEdit\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Row, Col } from 'react-bootstrap/Container';\nimport \"../css/app.css\"; //the only css import that connects different css components\n//used to propagate state to all levels of code. no need to transfer data in a stair like pattern\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const RecipeContext = /*#__PURE__*/React.createContext();\nconst LOCAL_STORAGE_KEY = 'cookingWithReact.App[recipes]'; //just a string name for your local key\n\nexport default function App() {\n  _s();\n\n  const [recipes, setRecipes] = useState(sampleRecipes); //state for recipes\n\n  const [selectedRecipeId, setSelectedRecipeId] = useState(); //state for selected item to propagate to edit page\n\n  const selectedRecipe = recipes.find(recipe => recipe.id === selectedRecipeId); //id of recipe that is selected or if there is one selected\n\n  const recipeContextValue = {\n    //context value that will be passed on diff. levels of nested components\n    handleRecipeAdd,\n    handleRecipeDelete,\n    handleRecipeSelect,\n    handleRecipeChange\n  };\n  useEffect(() => {\n    firebase.database().ref('recipes') // Sync the data.\n    .on('value', snapshot => {\n      if (snapshot.val()) setRecipes(snapshot.val());\n    });\n  }, []);\n  useEffect(() => {\n    firebase.database().ref('recipes').set(recipes);\n    firebase.database().ref('recipes').update(recipes);\n  }, [recipes]); //persisting our local storage by using useEffect\n\n  useEffect(() => {\n    const recipeKeyFromLocalStorage = localStorage.getItem(LOCAL_STORAGE_KEY);\n    recipeKeyFromLocalStorage === null ? alert(\"no data in local storage\") : setRecipes(JSON.parse(recipeKeyFromLocalStorage));\n  }, []);\n  useEffect(() => {\n    localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(recipes));\n  }, [recipes]);\n\n  function handleRecipeSelect(id) {\n    setSelectedRecipeId(id);\n  }\n\n  function handleRecipeChange(id, recipe) {\n    const newRecipes = [...recipes];\n    const index = newRecipes.findIndex(r => r.id === id);\n    newRecipes[index] = recipe;\n    setRecipes(newRecipes);\n  }\n\n  function handleRecipeAdd() {\n    const newRecipe = {\n      id: uuidv4(),\n      name: \"\",\n      cookTime: \"\",\n      servings: 1,\n      instructions: \"\",\n      ingredients: [{\n        id: uuidv4(),\n        name: \"\",\n        amount: \"\"\n      }],\n      authors: [{\n        id: uuidv4(),\n        name: \"\"\n      }]\n    };\n    setSelectedRecipeId(newRecipe.id);\n    setRecipes([...recipes, newRecipe]);\n  }\n\n  function handleRecipeDelete(id) {\n    if (selectedRecipeId != null && selectedRecipeId === id) {\n      setSelectedRecipeId(null);\n    }\n\n    setRecipes(recipes.filter(recipe => recipe.id !== id));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"background\",\n    children: /*#__PURE__*/_jsxDEV(RecipeContext.Provider, {\n      value: recipeContextValue,\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(RecipeList, {\n            recipes: recipes\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          className: \"col\",\n          children: selectedRecipe ? selectedRecipe && /*#__PURE__*/_jsxDEV(RecipeEdit, {\n            recipe: selectedRecipe\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 40\n          }, this) : /*#__PURE__*/_jsxDEV(NoRecipesSelected, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 80\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 3\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"Gz/AWVcqmKoOjWGpki57mURRdbk=\");\n\n_c = App;\nconst sampleRecipes = [{\n  id: uuidv4(),\n  name: \"Plain Chiken\",\n  cookTime: \"1:45\",\n  servings: \"3\",\n  instructions: `1.Put salt on chicken \\n 2.Put chicken inside the oven \\n3.Garnish with greens and serve`,\n  ingredients: [{\n    id: uuidv4(),\n    name: \"Chicken\",\n    amount: \"2 pounds\"\n  }, {\n    id: uuidv4(),\n    name: \"Salt\",\n    amount: \"1 tsp\"\n  }],\n  authors: [{\n    id: uuidv4(),\n    name: \"Chef Robert\"\n  }]\n}, {\n  id: uuidv4(),\n  name: \"Pork Chop\",\n  cookTime: \"2:45\",\n  servings: \"2\",\n  instructions: \"1.Put salt on pork \\n 2.Put put inside the oven \\n 3.Garnish with greens and serve\",\n  ingredients: [{\n    id: uuidv4(),\n    name: \"Pork\",\n    amount: \"3 pounds\"\n  }, {\n    id: uuidv4(),\n    name: \"Paprika\",\n    amount: \"1 tsp\"\n  }],\n  authors: [{\n    id: uuidv4(),\n    name: \"Chef John\"\n  }]\n}];\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/kor/rmetest/src/components/App.js"],"names":["React","useState","useEffect","v4","uuidv4","firebase","NoRecipesSelected","RecipeList","RecipeEdit","Row","Col","RecipeContext","createContext","LOCAL_STORAGE_KEY","App","recipes","setRecipes","sampleRecipes","selectedRecipeId","setSelectedRecipeId","selectedRecipe","find","recipe","id","recipeContextValue","handleRecipeAdd","handleRecipeDelete","handleRecipeSelect","handleRecipeChange","database","ref","on","snapshot","val","set","update","recipeKeyFromLocalStorage","localStorage","getItem","alert","JSON","parse","setItem","stringify","newRecipes","index","findIndex","r","newRecipe","name","cookTime","servings","instructions","ingredients","amount","authors","filter"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport firebase from '../Base';\nimport NoRecipesSelected from \"./NoRecipesSelected\";\nimport RecipeList from \"./RecipeList\";\nimport RecipeEdit from \"./RecipeEdit\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {Row,Col} from 'react-bootstrap/Container';\nimport \"../css/app.css\"; //the only css import that connects different css components\n\n\n\n\n//used to propagate state to all levels of code. no need to transfer data in a stair like pattern\nexport const RecipeContext = React.createContext();\nconst LOCAL_STORAGE_KEY = 'cookingWithReact.App[recipes]';//just a string name for your local key\n\nexport default function App() {\n  const [recipes, setRecipes] = useState(sampleRecipes);//state for recipes\n  const [selectedRecipeId, setSelectedRecipeId] = useState();//state for selected item to propagate to edit page\n  const selectedRecipe = recipes.find(recipe=>recipe.id === selectedRecipeId); //id of recipe that is selected or if there is one selected\n  \n  \n  \n \n  const recipeContextValue ={//context value that will be passed on diff. levels of nested components\n    handleRecipeAdd,\n    handleRecipeDelete,\n    handleRecipeSelect,\n    handleRecipeChange,\n    \n  };\n\n  useEffect(()=>{\n    firebase.database().ref('recipes')\n        // Sync the data.\n        .on('value', snapshot => {\n            if (snapshot.val())\n                setRecipes(snapshot.val());\n        });\n  },[]);\n\n  useEffect(() => {\n    firebase.database().ref('recipes').set(recipes)\n    firebase.database().ref('recipes').update(recipes)\n }, [recipes])\n  \n  //persisting our local storage by using useEffect\n\n  useEffect(()=>{\n    const recipeKeyFromLocalStorage =  localStorage.getItem(LOCAL_STORAGE_KEY);\n    recipeKeyFromLocalStorage===null?alert(\"no data in local storage\"):setRecipes(JSON.parse(recipeKeyFromLocalStorage));\n  },[]);\n\n  useEffect(()=>{\n    localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(recipes));\n  },[recipes]);\n\n  \n\n  function handleRecipeSelect(id){\n    setSelectedRecipeId(id);\n    }\n\n  function handleRecipeChange(id,recipe){\n    const newRecipes = [...recipes];\n    const index = newRecipes.findIndex(r=>r.id === id);\n    newRecipes[index] = recipe;\n    setRecipes(newRecipes);\n  }\n  \n\n  \n  function handleRecipeAdd() {\n    const newRecipe = {\n      id: uuidv4(),\n      name: \"\",\n      cookTime: \"\",\n      servings: 1,\n      instructions: \"\",\n      ingredients: [\n        {\n          id: uuidv4(),\n          name: \"\",\n          amount: \"\",\n        },\n      ],\n      authors:[\n        {\n          id: uuidv4(),\n          name:\"\",\n        }\n      ]\n    };\n    setSelectedRecipeId(newRecipe.id);\n    setRecipes([...recipes, newRecipe]);\n  }\n  function handleRecipeDelete(id){\n    if(selectedRecipeId != null && selectedRecipeId === id){\n      setSelectedRecipeId(null);\n    }\n\n    setRecipes(recipes.filter(recipe=>recipe.id!==id))\n  }\n  \n\n  return (\n    <div className=\"background\" >\n  <RecipeContext.Provider value={recipeContextValue}>\n      <Row>\n      <Col>\n\n      <RecipeList recipes={recipes} /> \n      </Col>\n      <Col className=\"col\">\n     {selectedRecipe?selectedRecipe && <RecipeEdit recipe = {selectedRecipe}/>:<NoRecipesSelected/>}\n\n      </Col>\n     \n      </Row>\n     \n      \n  </RecipeContext.Provider>\n  </div>\n  )\n}\n\nconst sampleRecipes = [\n  {\n    id: uuidv4(),\n    name: \"Plain Chiken\",\n    cookTime: \"1:45\",\n    servings: \"3\",\n    instructions: `1.Put salt on chicken \\n 2.Put chicken inside the oven \\n3.Garnish with greens and serve`,\n    ingredients: [\n      {\n        id: uuidv4(),\n        name: \"Chicken\",\n        amount: \"2 pounds\",\n      },\n      {\n        id: uuidv4(),\n        name: \"Salt\",\n        amount: \"1 tsp\",\n      },\n    ],\n    authors: [\n      {\n        id: uuidv4(),\n        name: \"Chef Robert\",\n        \n      },\n      \n    ],\n  },\n  {\n    id: uuidv4(),\n    name: \"Pork Chop\",\n    cookTime: \"2:45\",\n    servings: \"2\",\n    instructions:\n      \"1.Put salt on pork \\n 2.Put put inside the oven \\n 3.Garnish with greens and serve\",\n    ingredients: [\n      {\n        id: uuidv4(),\n        name: \"Pork\",\n        amount: \"3 pounds\",\n      },\n      {\n        id: uuidv4(),\n        name: \"Paprika\",\n        amount: \"1 tsp\",\n      },\n    ],\n    authors: [\n      {\n        id: uuidv4(),\n        name: \"Chef John\",\n        \n      },\n      \n    ],\n  },\n];\n\n"]},"metadata":{},"sourceType":"module"}