{"ast":null,"code":"var _jsxFileName = \"/Users/kor/rmetest/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport RecipeList from \"./RecipeList\";\nimport RecipeEdit from \"./RecipeEdit\";\nimport Search from \"./Search\";\nimport \"../css/app.css\"; //the only css import that connects different css components\n//used to propagate state to all levels of code. no need to transfer data in a stair like pattern\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const RecipeContext = /*#__PURE__*/React.createContext();\nconst LOCAL_STORAGE_KEY = 'cookingWithReact.App[recipes]'; //just a string name for your local key\n\nexport default function App() {\n  _s();\n\n  const [recipes, setRecipes] = useState(sampleRecipes); //state for recipes\n\n  const [selectedRecipeId, setSelectedRecipeId] = useState(); //state for selected item to propagate to edit page\n\n  const selectedRecipe = recipes.find(recipe => recipe.id === selectedRecipeId); //id of recipe that is selected or if there is one selected\n\n  const recipeContextValue = {\n    //context value that will be passed on diff. levels of nested components\n    handleRecipeAdd,\n    handleRecipeDelete,\n    handleRecipeSelect,\n    handleRecipeChange\n  }; //persisting our local storage by using useEffect\n\n  useEffect(() => {\n    const recipeKeyFromLocalStorage = localStorage.getItem(LOCAL_STORAGE_KEY);\n    recipeKeyFromLocalStorage === null ? alert(\"no data in local storage\") : setRecipes(JSON.parse(recipeKeyFromLocalStorage));\n  }, []);\n  useEffect(() => {\n    localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(recipes));\n  }, [recipes]); //search block\n\n  const {\n    search\n  } = window.location;\n  const query = new URLSearchParams(search).get('search');\n\n  const filterRecipes = (recipes, query) => {\n    console.log(query);\n\n    if (!query) {\n      return recipes;\n    }\n\n    return recipes.filter(recipe => {\n      const recipeName = recipe.name.toLowerCase();\n      return recipeName.includes(query);\n    });\n  };\n\n  const filteredRecipe = filterRecipes(recipes, query); //end of search\n\n  function handleRecipeSelect(id) {\n    setSelectedRecipeId(id);\n  }\n\n  function handleRecipeChange(id, recipe) {\n    const newRecipes = [...recipes];\n    const index = newRecipes.findIndex(r => r.id === id);\n    newRecipes[index] = recipe;\n    setRecipes(newRecipes);\n  }\n\n  function handleRecipeAdd() {\n    const newRecipe = {\n      id: uuidv4(),\n      name: \"\",\n      cookTime: \"\",\n      servings: 1,\n      instructions: \"\",\n      ingredients: [{\n        id: uuidv4(),\n        name: \"\",\n        amount: \"\"\n      }]\n    };\n    setSelectedRecipeId(newRecipe.id);\n    setRecipes([...recipes, newRecipe]);\n  }\n\n  function handleRecipeDelete(id) {\n    if (selectedRecipeId != null && selectedRecipeId === id) {\n      setSelectedRecipeId(null);\n    }\n\n    setRecipes(recipes.filter(recipe => recipe.id !== id));\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(RecipeContext.Provider, {\n      value: recipeContextValue,\n      children: [/*#__PURE__*/_jsxDEV(Search, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(RecipeList, {\n        recipes: recipes\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 7\n      }, this), selectedRecipe && /*#__PURE__*/_jsxDEV(RecipeEdit, {\n        recipe: selectedRecipe\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 26\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 3\n    }, this)\n  }, void 0, false);\n}\n\n_s(App, \"m5CfRKeLDnP4zSRdeJJOMK8j32k=\");\n\n_c = App;\nconst sampleRecipes = [{\n  id: uuidv4(),\n  name: \"Plain Chiken\",\n  cookTime: \"1:45\",\n  servings: \"3\",\n  instructions: `1.Put salt on chicken \\n 2.Put chicken inside the oven \\n3.Garnish with greens and serve`,\n  ingredients: [{\n    id: uuidv4(),\n    name: \"Chicken\",\n    amount: \"2 pounds\"\n  }, {\n    id: uuidv4(),\n    name: \"Salt\",\n    amount: \"1 tsp\"\n  }]\n}, {\n  id: uuidv4(),\n  name: \"Pork Chop\",\n  cookTime: \"2:45\",\n  servings: \"2\",\n  instructions: \"1.Put salt on pork \\n 2.Put put inside the oven \\n 3.Garnish with greens and serve\",\n  ingredients: [{\n    id: uuidv4(),\n    name: \"Pork\",\n    amount: \"3 pounds\"\n  }, {\n    id: uuidv4(),\n    name: \"Paprika\",\n    amount: \"1 tsp\"\n  }]\n}];\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/kor/rmetest/src/components/App.js"],"names":["React","useState","useEffect","v4","uuidv4","RecipeList","RecipeEdit","Search","RecipeContext","createContext","LOCAL_STORAGE_KEY","App","recipes","setRecipes","sampleRecipes","selectedRecipeId","setSelectedRecipeId","selectedRecipe","find","recipe","id","recipeContextValue","handleRecipeAdd","handleRecipeDelete","handleRecipeSelect","handleRecipeChange","recipeKeyFromLocalStorage","localStorage","getItem","alert","JSON","parse","setItem","stringify","search","window","location","query","URLSearchParams","get","filterRecipes","console","log","filter","recipeName","name","toLowerCase","includes","filteredRecipe","newRecipes","index","findIndex","r","newRecipe","cookTime","servings","instructions","ingredients","amount"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nimport RecipeList from \"./RecipeList\";\nimport RecipeEdit from \"./RecipeEdit\";\nimport Search from \"./Search\";\nimport \"../css/app.css\"; //the only css import that connects different css components\n\n\n//used to propagate state to all levels of code. no need to transfer data in a stair like pattern\nexport const RecipeContext = React.createContext();\nconst LOCAL_STORAGE_KEY = 'cookingWithReact.App[recipes]';//just a string name for your local key\n\nexport default function App() {\n  const [recipes, setRecipes] = useState(sampleRecipes);//state for recipes\n  const [selectedRecipeId, setSelectedRecipeId] = useState();//state for selected item to propagate to edit page\n  const selectedRecipe = recipes.find(recipe=>recipe.id === selectedRecipeId); //id of recipe that is selected or if there is one selected\n  \n  \n  \n \n  const recipeContextValue ={//context value that will be passed on diff. levels of nested components\n    handleRecipeAdd,\n    handleRecipeDelete,\n    handleRecipeSelect,\n    handleRecipeChange,\n    \n  };\n\n  //persisting our local storage by using useEffect\n\n  useEffect(()=>{\n    const recipeKeyFromLocalStorage =  localStorage.getItem(LOCAL_STORAGE_KEY);\n    recipeKeyFromLocalStorage===null?alert(\"no data in local storage\"):setRecipes(JSON.parse(recipeKeyFromLocalStorage));\n  },[]);\n\n  useEffect(()=>{\n    localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(recipes));\n  },[recipes]);\n//search block\n  const { search } = window.location;\n  const query = new URLSearchParams(search).get('search');\n  \n\n  const filterRecipes = (recipes,query)=>{\n    console.log(query);\n        if(!query){\n      return recipes\n    }\n    return recipes.filter((recipe)=>{\n      const recipeName = recipe.name.toLowerCase();\n      return recipeName.includes(query);\n    });\n  }\n  const filteredRecipe = filterRecipes(recipes,query); \n//end of search\n  function handleRecipeSelect(id){\n    setSelectedRecipeId(id);\n    }\n\n  function handleRecipeChange(id,recipe){\n    const newRecipes = [...recipes];\n    const index = newRecipes.findIndex(r=>r.id === id);\n    newRecipes[index] = recipe;\n    setRecipes(newRecipes);\n  }\n  \n\n  \n  function handleRecipeAdd() {\n    const newRecipe = {\n      id: uuidv4(),\n      name: \"\",\n      cookTime: \"\",\n      servings: 1,\n      instructions: \"\",\n      ingredients: [\n        {\n          id: uuidv4(),\n          name: \"\",\n          amount: \"\",\n        },\n      ],\n    };\n    setSelectedRecipeId(newRecipe.id);\n    setRecipes([...recipes, newRecipe]);\n  }\n  function handleRecipeDelete(id){\n    if(selectedRecipeId != null && selectedRecipeId === id){\n      setSelectedRecipeId(null);\n    }\n\n    setRecipes(recipes.filter(recipe=>recipe.id!==id))\n  }\n  \n\n  return <>\n  <RecipeContext.Provider value={recipeContextValue}>\n      <Search/>\n      <RecipeList recipes={recipes} />\n      {selectedRecipe && <RecipeEdit recipe = {selectedRecipe}/>}\n  </RecipeContext.Provider>\n  </>\n}\n\nconst sampleRecipes = [\n  {\n    id: uuidv4(),\n    name: \"Plain Chiken\",\n    cookTime: \"1:45\",\n    servings: \"3\",\n    instructions: `1.Put salt on chicken \\n 2.Put chicken inside the oven \\n3.Garnish with greens and serve`,\n    ingredients: [\n      {\n        id: uuidv4(),\n        name: \"Chicken\",\n        amount: \"2 pounds\",\n      },\n      {\n        id: uuidv4(),\n        name: \"Salt\",\n        amount: \"1 tsp\",\n      },\n    ],\n  },\n  {\n    id: uuidv4(),\n    name: \"Pork Chop\",\n    cookTime: \"2:45\",\n    servings: \"2\",\n    instructions:\n      \"1.Put salt on pork \\n 2.Put put inside the oven \\n 3.Garnish with greens and serve\",\n    ingredients: [\n      {\n        id: uuidv4(),\n        name: \"Pork\",\n        amount: \"3 pounds\",\n      },\n      {\n        id: uuidv4(),\n        name: \"Paprika\",\n        amount: \"1 tsp\",\n      },\n    ],\n  },\n];\n\n"]},"metadata":{},"sourceType":"module"}