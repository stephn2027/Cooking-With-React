{"ast":null,"code":"var _jsxFileName = \"/Users/kor/rmetest/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport base from '../Base';\nimport { firebaseApp } from '../Base';\nimport RecipeList from \"./RecipeList\";\nimport RecipeEdit from \"./RecipeEdit\";\nimport \"../css/app.css\"; //the only css import that connects different css components\n//used to propagate state to all levels of code. no need to transfer data in a stair like pattern\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const RecipeContext = /*#__PURE__*/React.createContext();\nconst LOCAL_STORAGE_KEY = 'cookingWithReact.App[recipes]'; //just a string name for your local key\n\nexport default function App() {\n  _s();\n\n  const [recipes, setRecipes] = useState(sampleRecipes); //state for recipes\n\n  const [selectedRecipeId, setSelectedRecipeId] = useState(); //state for selected item to propagate to edit page\n\n  const selectedRecipe = recipes.find(recipe => recipe.id === selectedRecipeId); //id of recipe that is selected or if there is one selected\n\n  const recipeContextValue = {\n    //context value that will be passed on diff. levels of nested components\n    handleRecipeAdd,\n    handleRecipeDelete,\n    handleRecipeSelect,\n    handleRecipeChange\n  };\n  useEffect(() => {\n    const stateName = Object.keys(recipes)[0];\n    const ref = base.syncState(recipes, {\n      context: {\n        setRecipes: stateChange => setRecipes({ ...stateChange[stateName]\n        }),\n        recipes\n      },\n      state: stateName\n    });\n    return () => {\n      base.removeBinding(ref);\n    };\n  }, []); //persisting our local storage by using useEffect\n\n  useEffect(() => {\n    const recipeKeyFromLocalStorage = localStorage.getItem(LOCAL_STORAGE_KEY);\n    recipeKeyFromLocalStorage === null ? alert(\"no data in local storage\") : setRecipes(JSON.parse(recipeKeyFromLocalStorage));\n  }, []);\n  useEffect(() => {\n    localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(recipes));\n  }, [recipes]);\n\n  function handleRecipeSelect(id) {\n    setSelectedRecipeId(id);\n  }\n\n  function handleRecipeChange(id, recipe) {\n    const newRecipes = [...recipes];\n    const index = newRecipes.findIndex(r => r.id === id);\n    newRecipes[index] = recipe;\n    setRecipes(newRecipes);\n  }\n\n  function handleRecipeAdd() {\n    const newRecipe = {\n      id: uuidv4(),\n      name: \"\",\n      cookTime: \"\",\n      servings: 1,\n      instructions: \"\",\n      ingredients: [{\n        id: uuidv4(),\n        name: \"\",\n        amount: \"\"\n      }],\n      authors: [{\n        id: uuidv4(),\n        name: \"\"\n      }]\n    };\n    setSelectedRecipeId(newRecipe.id);\n    setRecipes([...recipes, newRecipe]);\n  }\n\n  function handleRecipeDelete(id) {\n    if (selectedRecipeId != null && selectedRecipeId === id) {\n      setSelectedRecipeId(null);\n    }\n\n    setRecipes(recipes.filter(recipe => recipe.id !== id));\n  }\n\n  return /*#__PURE__*/_jsxDEV(RecipeContext.Provider, {\n    value: recipeContextValue,\n    children: [/*#__PURE__*/_jsxDEV(RecipeList, {\n      recipes: recipes\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), selectedRecipe && /*#__PURE__*/_jsxDEV(RecipeEdit, {\n      recipe: selectedRecipe\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 26\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 3\n  }, this);\n}\n\n_s(App, \"qkLX0dlAmV841XfqPACb3x238Iw=\");\n\n_c = App;\nconst sampleRecipes = [{\n  id: uuidv4(),\n  name: \"Plain Chiken\",\n  cookTime: \"1:45\",\n  servings: \"3\",\n  instructions: `1.Put salt on chicken \\n 2.Put chicken inside the oven \\n3.Garnish with greens and serve`,\n  ingredients: [{\n    id: uuidv4(),\n    name: \"Chicken\",\n    amount: \"2 pounds\"\n  }, {\n    id: uuidv4(),\n    name: \"Salt\",\n    amount: \"1 tsp\"\n  }],\n  authors: [{\n    id: uuidv4(),\n    name: \"Chef Robert\"\n  }]\n}, {\n  id: uuidv4(),\n  name: \"Pork Chop\",\n  cookTime: \"2:45\",\n  servings: \"2\",\n  instructions: \"1.Put salt on pork \\n 2.Put put inside the oven \\n 3.Garnish with greens and serve\",\n  ingredients: [{\n    id: uuidv4(),\n    name: \"Pork\",\n    amount: \"3 pounds\"\n  }, {\n    id: uuidv4(),\n    name: \"Paprika\",\n    amount: \"1 tsp\"\n  }],\n  authors: [{\n    id: uuidv4(),\n    name: \"Chef John\"\n  }]\n}];\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/kor/rmetest/src/components/App.js"],"names":["React","useState","useEffect","v4","uuidv4","base","firebaseApp","RecipeList","RecipeEdit","RecipeContext","createContext","LOCAL_STORAGE_KEY","App","recipes","setRecipes","sampleRecipes","selectedRecipeId","setSelectedRecipeId","selectedRecipe","find","recipe","id","recipeContextValue","handleRecipeAdd","handleRecipeDelete","handleRecipeSelect","handleRecipeChange","stateName","Object","keys","ref","syncState","context","stateChange","state","removeBinding","recipeKeyFromLocalStorage","localStorage","getItem","alert","JSON","parse","setItem","stringify","newRecipes","index","findIndex","r","newRecipe","name","cookTime","servings","instructions","ingredients","amount","authors","filter"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport base from '../Base';\nimport {firebaseApp } from '../Base'\nimport RecipeList from \"./RecipeList\";\nimport RecipeEdit from \"./RecipeEdit\";\n\nimport \"../css/app.css\"; //the only css import that connects different css components\n\n\n\n\n//used to propagate state to all levels of code. no need to transfer data in a stair like pattern\nexport const RecipeContext = React.createContext();\nconst LOCAL_STORAGE_KEY = 'cookingWithReact.App[recipes]';//just a string name for your local key\n\nexport default function App() {\n  const [recipes, setRecipes] = useState(sampleRecipes);//state for recipes\n  const [selectedRecipeId, setSelectedRecipeId] = useState();//state for selected item to propagate to edit page\n  const selectedRecipe = recipes.find(recipe=>recipe.id === selectedRecipeId); //id of recipe that is selected or if there is one selected\n  \n  \n  \n \n  const recipeContextValue ={//context value that will be passed on diff. levels of nested components\n    handleRecipeAdd,\n    handleRecipeDelete,\n    handleRecipeSelect,\n    handleRecipeChange,\n    \n  };\n\n  useEffect(()=>{\n    const stateName = Object.keys(recipes)[0];\n    const ref = base.syncState(recipes, {\n      context: {\n        setRecipes: (stateChange) => setRecipes({ ...stateChange[stateName] }),\n        recipes,\n      },\n      state: stateName\n    })\n\n    return () => {\n      base.removeBinding(ref);\n    }\n  },[]);\n  \n  //persisting our local storage by using useEffect\n\n  useEffect(()=>{\n    const recipeKeyFromLocalStorage =  localStorage.getItem(LOCAL_STORAGE_KEY);\n    recipeKeyFromLocalStorage===null?alert(\"no data in local storage\"):setRecipes(JSON.parse(recipeKeyFromLocalStorage));\n  },[]);\n\n  useEffect(()=>{\n    localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(recipes));\n  },[recipes]);\n\n  \n\n  function handleRecipeSelect(id){\n    setSelectedRecipeId(id);\n    }\n\n  function handleRecipeChange(id,recipe){\n    const newRecipes = [...recipes];\n    const index = newRecipes.findIndex(r=>r.id === id);\n    newRecipes[index] = recipe;\n    setRecipes(newRecipes);\n  }\n  \n\n  \n  function handleRecipeAdd() {\n    const newRecipe = {\n      id: uuidv4(),\n      name: \"\",\n      cookTime: \"\",\n      servings: 1,\n      instructions: \"\",\n      ingredients: [\n        {\n          id: uuidv4(),\n          name: \"\",\n          amount: \"\",\n        },\n      ],\n      authors:[\n        {\n          id: uuidv4(),\n          name:\"\",\n        }\n      ]\n    };\n    setSelectedRecipeId(newRecipe.id);\n    setRecipes([...recipes, newRecipe]);\n  }\n  function handleRecipeDelete(id){\n    if(selectedRecipeId != null && selectedRecipeId === id){\n      setSelectedRecipeId(null);\n    }\n\n    setRecipes(recipes.filter(recipe=>recipe.id!==id))\n  }\n  \n\n  return (\n  \n  <RecipeContext.Provider value={recipeContextValue}>\n      <RecipeList recipes={recipes} />\n      {selectedRecipe && <RecipeEdit recipe = {selectedRecipe}/>}\n  </RecipeContext.Provider>\n  \n  )\n}\n\nconst sampleRecipes = [\n  {\n    id: uuidv4(),\n    name: \"Plain Chiken\",\n    cookTime: \"1:45\",\n    servings: \"3\",\n    instructions: `1.Put salt on chicken \\n 2.Put chicken inside the oven \\n3.Garnish with greens and serve`,\n    ingredients: [\n      {\n        id: uuidv4(),\n        name: \"Chicken\",\n        amount: \"2 pounds\",\n      },\n      {\n        id: uuidv4(),\n        name: \"Salt\",\n        amount: \"1 tsp\",\n      },\n    ],\n    authors: [\n      {\n        id: uuidv4(),\n        name: \"Chef Robert\",\n        \n      },\n      \n    ],\n  },\n  {\n    id: uuidv4(),\n    name: \"Pork Chop\",\n    cookTime: \"2:45\",\n    servings: \"2\",\n    instructions:\n      \"1.Put salt on pork \\n 2.Put put inside the oven \\n 3.Garnish with greens and serve\",\n    ingredients: [\n      {\n        id: uuidv4(),\n        name: \"Pork\",\n        amount: \"3 pounds\",\n      },\n      {\n        id: uuidv4(),\n        name: \"Paprika\",\n        amount: \"1 tsp\",\n      },\n    ],\n    authors: [\n      {\n        id: uuidv4(),\n        name: \"Chef John\",\n        \n      },\n      \n    ],\n  },\n];\n\n"]},"metadata":{},"sourceType":"module"}