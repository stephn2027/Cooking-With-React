{"ast":null,"code":"var _jsxFileName = \"/Users/kor/rmetest/src/components/RecipeList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from \"react\";\nimport { RecipeContext } from \"./App\";\nimport Recipe from \"./Recipe\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function RecipeList({\n  recipes\n}) {\n  _s();\n\n  const {\n    handleRecipeAdd\n  } = useContext(RecipeContext);\n\n  function handleInputMatch(wordToMatch, recipes) {\n    return recipes.filter(recipe => {\n      const regex = new RegExp(wordToMatch, 'gi');\n      return recipe.name.match(regex);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"recipe-list\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"recipe-list__search-bar-container\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"search\",\n          className: \"recipe-list__search-bar recipe__value\",\n          placeholder: \"search for recipe\",\n          onChange: e => handleInputMatch(e.target.value, {\n            recipes\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: recipes.map(recipe => {\n          return /*#__PURE__*/_jsxDEV(Recipe, { ...recipe\n          }, recipe.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 20\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"recipe-list__add-recipe-btn-container\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn--primary\",\n          onClick: handleRecipeAdd,\n          children: \"Add a recipe\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(RecipeList, \"Qhwz5jJDSe5rNipb6j8Vz2tHsbM=\");\n\n_c = RecipeList;\n\nvar _c;\n\n$RefreshReg$(_c, \"RecipeList\");","map":{"version":3,"sources":["/Users/kor/rmetest/src/components/RecipeList.js"],"names":["React","useContext","RecipeContext","Recipe","RecipeList","recipes","handleRecipeAdd","handleInputMatch","wordToMatch","filter","recipe","regex","RegExp","name","match","e","target","value","map","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,aAAT,QAA8B,OAA9B;AACA,OAAOC,MAAP,MAAmB,UAAnB;;;AAEA,eAAe,SAASC,UAAT,CAAoB;AAAEC,EAAAA;AAAF,CAApB,EAAiC;AAAA;;AAC9C,QAAM;AAAEC,IAAAA;AAAF,MAAsBL,UAAU,CAACC,aAAD,CAAtC;;AAEA,WAASK,gBAAT,CAA0BC,WAA1B,EAAsCH,OAAtC,EAA8C;AAC5C,WAAOA,OAAO,CAACI,MAAR,CAAeC,MAAM,IAAE;AAC1B,YAAMC,KAAK,GAAG,IAAIC,MAAJ,CAAWJ,WAAX,EAAuB,IAAvB,CAAd;AACA,aAAOE,MAAM,CAACG,IAAP,CAAYC,KAAZ,CAAkBH,KAAlB,CAAP;AACD,KAHI,CAAP;AAID;;AAID,sBACE;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,mCAAf;AAAA,+BACE;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,IAAI,EAAC,QAFP;AAGE,UAAA,SAAS,EAAC,uCAHZ;AAIE,UAAA,WAAW,EAAC,mBAJd;AAKE,UAAA,QAAQ,EAAGI,CAAD,IAAOR,gBAAgB,CAACQ,CAAC,CAACC,MAAF,CAASC,KAAV,EAAgB;AAACZ,YAAAA;AAAD,WAAhB;AALnC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAUE;AAAA,kBACGA,OAAO,CAACa,GAAR,CAAaR,MAAD,IAAY;AAGvB,8BAAO,QAAC,MAAD,OAA4BA;AAA5B,aAAaA,MAAM,CAACS,EAApB;AAAA;AAAA;AAAA;AAAA,kBAAP;AACD,SAJA;AADH;AAAA;AAAA;AAAA;AAAA,cAVF,eAkBE;AAAK,QAAA,SAAS,EAAC,uCAAf;AAAA,+BACE;AAAQ,UAAA,SAAS,EAAC,kBAAlB;AAAqC,UAAA,OAAO,EAAEb,eAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAlBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AA4BD;;GAxCuBF,U;;KAAAA,U","sourcesContent":["import React, { useContext } from \"react\";\nimport { RecipeContext } from \"./App\";\nimport Recipe from \"./Recipe\";\n\nexport default function RecipeList({ recipes }) {\n  const { handleRecipeAdd } = useContext(RecipeContext);\n\n  function handleInputMatch(wordToMatch,recipes){\n    return recipes.filter(recipe=>{\n        const regex = new RegExp(wordToMatch,'gi')\n        return recipe.name.match(regex)\n      })\n  }\n  \n  \n  \n  return (\n    <>\n      <div className=\"recipe-list\">\n        <div className=\"recipe-list__search-bar-container\">\n          <input\n            type=\"text\"\n            name=\"search\"\n            className=\"recipe-list__search-bar recipe__value\"\n            placeholder=\"search for recipe\"\n            onChange={(e) => handleInputMatch(e.target.value,{recipes})}\n          />\n        </div>\n        <div>\n          {recipes.map((recipe) => {\n           \n\n            return <Recipe key={recipe.id} {...recipe} />;\n          })}\n        </div>\n\n        <div className=\"recipe-list__add-recipe-btn-container\">\n          <button className=\"btn btn--primary\" onClick={handleRecipeAdd}>\n            Add a recipe\n          </button>\n        </div>\n      </div>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}