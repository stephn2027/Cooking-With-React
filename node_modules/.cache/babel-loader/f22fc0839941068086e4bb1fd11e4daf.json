{"ast":null,"code":"var _jsxFileName = \"/Users/kor/rmetest/src/components/RecipeList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState } from \"react\";\nimport { RecipeContext } from \"./App\";\nimport Recipe from \"./Recipe\";\nimport Search from \"./Search\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function RecipeList({\n  recipes\n}) {\n  _s();\n\n  const {\n    handleRecipeAdd\n  } = useContext(RecipeContext);\n  const {\n    search\n  } = window.location;\n  const query = new URLSearchParams(search).get(\"search\");\n  const [searchQuery, setSearchQuery] = useState(query || \"\");\n  const filteredRecipes = filterRecipe(recipes, searchQuery);\n\n  function filterRecipe(recipes, searchQuery) {\n    if (!searchQuery) {\n      return recipes;\n    }\n\n    return recipes.filter(recipe => {\n      const recipeName = recipe.name.toLowerCase();\n      return recipeName.includes(searchQuery);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"recipe-list\",\n      children: [/*#__PURE__*/_jsxDEV(Search, {\n        setSearchQuery: setSearchQuery,\n        searchQuery: searchQuery\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: filteredRecipes.map(recipe => /*#__PURE__*/_jsxDEV(Recipe, { ...recipe\n        }, recipe.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"recipe-list__add-recipe-btn-container\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn--primary\",\n          onClick: handleRecipeAdd,\n          children: \"Add a recipe\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(RecipeList, \"6F/YtLtnkfRpZqhh7KhcLsuvV38=\");\n\n_c = RecipeList;\n\nvar _c;\n\n$RefreshReg$(_c, \"RecipeList\");","map":{"version":3,"sources":["/Users/kor/rmetest/src/components/RecipeList.js"],"names":["React","useContext","useState","RecipeContext","Recipe","Search","RecipeList","recipes","handleRecipeAdd","search","window","location","query","URLSearchParams","get","searchQuery","setSearchQuery","filteredRecipes","filterRecipe","filter","recipe","recipeName","name","toLowerCase","includes","map","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,QAA4C,OAA5C;AACA,SAASC,aAAT,QAA8B,OAA9B;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,MAAP,MAAmB,UAAnB;;;AAEA,eAAe,SAASC,UAAT,CAAoB;AAAEC,EAAAA;AAAF,CAApB,EAAiC;AAAA;;AAC9C,QAAM;AAAEC,IAAAA;AAAF,MAAsBP,UAAU,CAACE,aAAD,CAAtC;AACA,QAAM;AAAEM,IAAAA;AAAF,MAAaC,MAAM,CAACC,QAA1B;AACA,QAAMC,KAAK,GAAG,IAAIC,eAAJ,CAAoBJ,MAApB,EAA4BK,GAA5B,CAAgC,QAAhC,CAAd;AACA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCd,QAAQ,CAACU,KAAK,IAAI,EAAV,CAA9C;AACA,QAAMK,eAAe,GAAGC,YAAY,CAACX,OAAD,EAASQ,WAAT,CAApC;;AACA,WAASG,YAAT,CAAsBX,OAAtB,EAA8BQ,WAA9B,EAA0C;AACxC,QAAG,CAACA,WAAJ,EAAgB;AACd,aAAOR,OAAP;AACD;;AACD,WAAOA,OAAO,CAACY,MAAR,CAAeC,MAAM,IAAE;AAC5B,YAAMC,UAAU,GAAGD,MAAM,CAACE,IAAP,CAAYC,WAAZ,EAAnB;AACA,aAAOF,UAAU,CAACG,QAAX,CAAoBT,WAApB,CAAP;AAED,KAJM,CAAP;AAMD;;AAGD,sBACE;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,8BACE,QAAC,MAAD;AAAQ,QAAA,cAAc,EAAEC,cAAxB;AAAwC,QAAA,WAAW,EAAED;AAArD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,kBASGE,eAAe,CAACQ,GAAhB,CAAoBL,MAAM,iBACzB,QAAC,MAAD,OAA4BA;AAA5B,WAAaA,MAAM,CAACM,EAApB;AAAA;AAAA;AAAA;AAAA,gBADD;AATH;AAAA;AAAA;AAAA;AAAA,cAFF,eAkBE;AAAK,QAAA,SAAS,EAAC,uCAAf;AAAA,+BACE;AAAQ,UAAA,SAAS,EAAC,kBAAlB;AAAqC,UAAA,OAAO,EAAElB,eAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAlBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AA4BD;;GA/CuBF,U;;KAAAA,U","sourcesContent":["import React, { useContext, useState } from \"react\";\nimport { RecipeContext } from \"./App\";\nimport Recipe from \"./Recipe\";\nimport Search from \"./Search\";\n\nexport default function RecipeList({ recipes }) {\n  const { handleRecipeAdd } = useContext(RecipeContext);\n  const { search } = window.location;\n  const query = new URLSearchParams(search).get(\"search\");\n  const [searchQuery, setSearchQuery] = useState(query || \"\");\n  const filteredRecipes = filterRecipe(recipes,searchQuery);\n  function filterRecipe(recipes,searchQuery){\n    if(!searchQuery){\n      return recipes\n    }\n    return recipes.filter(recipe=>{\n      const recipeName = recipe.name.toLowerCase();\n      return recipeName.includes(searchQuery);\n\n    })\n    \n  }\n\n\n  return (\n    <>\n      <div className=\"recipe-list\">\n        <Search setSearchQuery={setSearchQuery} searchQuery={searchQuery} />\n        <div>\n          {/* {recipes.map((recipe) => {\n            if(!searchQuery && searchQuery !== recipe.name){\n              return <Recipe key={recipe.id} {...recipe} />;\n            }else if(searchQuery === recipe.name){\n              \n              return  <Recipe key={recipe.id} {...recipe} />\n            }  \n          })} */}\n          {filteredRecipes.map(recipe=>(\n            <Recipe key={recipe.id} {...recipe}/>\n          )\n              \n          )}\n        </div>\n\n        <div className=\"recipe-list__add-recipe-btn-container\">\n          <button className=\"btn btn--primary\" onClick={handleRecipeAdd}>\n            Add a recipe\n          </button>\n        </div>\n      </div>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}