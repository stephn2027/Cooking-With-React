{"ast":null,"code":"import _objectSpread from\"/Users/kor/rmetest/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/Users/kor/rmetest/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useContext,useState}from\"react\";import{RecipeContext}from\"./App\";import Recipe from\"./Recipe\";import Search from\"./Search\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function RecipeList(_ref){var recipes=_ref.recipes;var _useContext=useContext(RecipeContext),handleRecipeAdd=_useContext.handleRecipeAdd;var search=window.location.search;var query=new URLSearchParams(search).get(\"search\");var _useState=useState(query||\"\"),_useState2=_slicedToArray(_useState,2),searchQuery=_useState2[0],setSearchQuery=_useState2[1];var filteredRecipes=filterRecipe(recipes,searchQuery);function filterRecipe(recipes,searchQuery){if(!searchQuery){return recipes;}return recipes.filter(function(recipe){var recipeName=recipe.name.toLowerCase();return recipeName.includes(searchQuery);});}return/*#__PURE__*/_jsx(React.Fragment,{children:/*#__PURE__*/_jsxs(\"div\",{className:\"recipe-list\",children:[/*#__PURE__*/_jsx(Search,{setSearchQuery:setSearchQuery,searchQuery:searchQuery}),/*#__PURE__*/_jsx(\"div\",{children:filteredRecipes.map(function(recipe){return/*#__PURE__*/_jsx(Recipe,_objectSpread({},recipe),recipe.id);})}),/*#__PURE__*/_jsx(\"div\",{className:\"recipe-list__add-recipe-btn-container\",children:/*#__PURE__*/_jsx(\"button\",{className:\"btn btn--primary\",onClick:handleRecipeAdd,children:\"Add a recipe\"})})]})});}","map":{"version":3,"sources":["/Users/kor/rmetest/src/components/RecipeList.js"],"names":["React","useContext","useState","RecipeContext","Recipe","Search","RecipeList","recipes","handleRecipeAdd","search","window","location","query","URLSearchParams","get","searchQuery","setSearchQuery","filteredRecipes","filterRecipe","filter","recipe","recipeName","name","toLowerCase","includes","map","id"],"mappings":"yMAAA,MAAOA,CAAAA,KAAP,EAAgBC,UAAhB,CAA4BC,QAA5B,KAA4C,OAA5C,CACA,OAASC,aAAT,KAA8B,OAA9B,CACA,MAAOC,CAAAA,MAAP,KAAmB,UAAnB,CACA,MAAOC,CAAAA,MAAP,KAAmB,UAAnB,C,wFAGA,cAAe,SAASC,CAAAA,UAAT,MAAiC,IAAXC,CAAAA,OAAW,MAAXA,OAAW,CAC9C,gBAA4BN,UAAU,CAACE,aAAD,CAAtC,CAAQK,eAAR,aAAQA,eAAR,CACA,GAAQC,CAAAA,MAAR,CAAmBC,MAAM,CAACC,QAA1B,CAAQF,MAAR,CACA,GAAMG,CAAAA,KAAK,CAAG,GAAIC,CAAAA,eAAJ,CAAoBJ,MAApB,EAA4BK,GAA5B,CAAgC,QAAhC,CAAd,CACA,cAAsCZ,QAAQ,CAACU,KAAK,EAAI,EAAV,CAA9C,wCAAOG,WAAP,eAAoBC,cAApB,eACA,GAAMC,CAAAA,eAAe,CAAGC,YAAY,CAACX,OAAD,CAASQ,WAAT,CAApC,CAEA,QAASG,CAAAA,YAAT,CAAsBX,OAAtB,CAA8BQ,WAA9B,CAA0C,CACxC,GAAG,CAACA,WAAJ,CAAgB,CACd,MAAOR,CAAAA,OAAP,CACD,CACD,MAAOA,CAAAA,OAAO,CAACY,MAAR,CAAe,SAAAC,MAAM,CAAE,CAC5B,GAAMC,CAAAA,UAAU,CAAGD,MAAM,CAACE,IAAP,CAAYC,WAAZ,EAAnB,CACA,MAAOF,CAAAA,UAAU,CAACG,QAAX,CAAoBT,WAApB,CAAP,CAED,CAJM,CAAP,CAMD,CAGD,mBACE,KAAC,KAAD,CAAO,QAAP,wBACE,aAAK,SAAS,CAAC,aAAf,wBACE,KAAC,MAAD,EAAQ,cAAc,CAAEC,cAAxB,CAAwC,WAAW,CAAED,WAArD,EADF,cAEE,qBAEGE,eAAe,CAACQ,GAAhB,CAAoB,SAAAL,MAAM,qBACzB,KAAC,MAAD,kBAA4BA,MAA5B,EAAaA,MAAM,CAACM,EAApB,CADyB,EAA1B,CAFH,EAFF,cAWE,YAAK,SAAS,CAAC,uCAAf,uBACE,eAAQ,SAAS,CAAC,kBAAlB,CAAqC,OAAO,CAAElB,eAA9C,0BADF,EAXF,GADF,EADF,CAqBD","sourcesContent":["import React, { useContext, useState } from \"react\";\nimport { RecipeContext } from \"./App\";\nimport Recipe from \"./Recipe\";\nimport Search from \"./Search\";\n\n\nexport default function RecipeList({ recipes }) {\n  const { handleRecipeAdd } = useContext(RecipeContext);\n  const { search } = window.location;\n  const query = new URLSearchParams(search).get(\"search\");\n  const [searchQuery, setSearchQuery] = useState(query || \"\");\n  const filteredRecipes = filterRecipe(recipes,searchQuery);\n  \n  function filterRecipe(recipes,searchQuery){\n    if(!searchQuery){\n      return recipes;\n    }\n    return recipes.filter(recipe=>{\n      const recipeName = recipe.name.toLowerCase();\n      return recipeName.includes(searchQuery);\n\n    })\n    \n  }\n\n\n  return (\n    <React.Fragment>\n      <div className=\"recipe-list\">\n        <Search setSearchQuery={setSearchQuery} searchQuery={searchQuery} />\n        <div>\n          \n          {filteredRecipes.map(recipe=>(\n            <Recipe key={recipe.id} {...recipe}/>\n          )\n              \n          )}\n        </div>\n\n        <div className=\"recipe-list__add-recipe-btn-container\">\n          <button className=\"btn btn--primary\" onClick={handleRecipeAdd}>\n            Add a recipe\n          </button>\n        </div>\n      </div>\n    </React.Fragment>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}